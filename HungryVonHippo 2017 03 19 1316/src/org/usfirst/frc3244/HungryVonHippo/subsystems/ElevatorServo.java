// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.HungryVonHippo.subsystems;

import org.usfirst.frc3244.HungryVonHippo.RobotMap;
import org.usfirst.frc3244.HungryVonHippo.commands.*;

import edu.wpi.first.wpilibj.Servo;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class ElevatorServo extends Subsystem {
	
	
	public static final double SETPOINT_AT_WALL = 0.5;
	public static final double SETPOINT_AT_RED_NEAR_WALL = 0.5;
	public static final double SETPOINT_AT_b = 0.5;
	public static final double SETPOINT_AT_c = 0.5;
	
	public static String KEY = "Elevator Setpoint";
	public static final double RAMP = 0.01;
	
	private double m_currentSetpoint;
	private static final double SERVO_MAX_SP = 0.8;
	private static final double SERVO_MIN_SP = 0.0;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Servo servo_Elevator = RobotMap.elevatorServoservo_Elevator;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public ElevatorServo(){
    	
    	SmartDashboard.putNumber(KEY, SETPOINT_AT_WALL);
    }
    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new ElevatorSet());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    public void My_Elevator_set(){
    	//get the setting from the SmartDashboard
    	m_currentSetpoint = SmartDashboard.getNumber(KEY,0.5);
    	
    	//Make Sure the Setpoint is in Range
    	if (m_currentSetpoint > SERVO_MAX_SP){
    		m_currentSetpoint = SERVO_MAX_SP;
    		SmartDashboard.putNumber(KEY,m_currentSetpoint);
    	}else if(m_currentSetpoint < SERVO_MIN_SP){
    		m_currentSetpoint = SERVO_MIN_SP;
    		SmartDashboard.putNumber(KEY,m_currentSetpoint);
    	}
    	
    	servo_Elevator.set(m_currentSetpoint);
    }
}

