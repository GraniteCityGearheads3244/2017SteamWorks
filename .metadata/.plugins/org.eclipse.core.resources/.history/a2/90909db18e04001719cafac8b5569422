// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.HungryVonHippo.subsystems;

import org.usfirst.frc3244.HungryVonHippo.RobotMap;
import org.usfirst.frc3244.HungryVonHippo.commands.*;

import edu.wpi.cscore.UsbCamera;
import edu.wpi.first.wpilibj.CameraServer;
import edu.wpi.first.wpilibj.Relay;
import edu.wpi.first.wpilibj.Relay.Value;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class Vision_hardware extends Subsystem {
	
	private static final int IMG_WIDTH = 320;
	private static final int IMG_HEIGHT = 240;
	UsbCamera camera_Right;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final Relay lights_Left_and_Forward = RobotMap.vision_hardwarelights_Left_and_Forward;
    private final Relay lights_Right = RobotMap.vision_hardwarelights_Right;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void My_Start_USB_Camera_Right(){
    	camera_Right = CameraServer.getInstance().startAutomaticCapture();
    	camera_Right.setBrightness(15);
    	SmartDashboard.putNumber("Camera_Right Brightness", camera_Right.getBrightness());//45
	    camera_Right.setResolution(IMG_WIDTH, IMG_HEIGHT);
    }
    
    public void My_Stop_USB_Camera_Right(){
    	//camera_Right.
    }
    
    public void My_All_Lights_Off(){
    	lights_Left_and_Forward.set(Value.kOff);
    	lights_Right.set(Value.kOff);
    }
    
    public void My_Left_Light(boolean on){
    	if(on){
    		lights_Left_and_Forward.set(Value.kForward);
    	}else{
    		lights_Left_and_Forward.set(Value.kOff);
    	}
    }
    
    public void My_Left_Forward(boolean on){
    	if(on){
    		lights_Left_and_Forward.set(Value.kReverse);
    	}else{
    		lights_Left_and_Forward.set(Value.kOff);
    	}
    }
    
    public void My_Left_Right(boolean on){
    	if(on){
    		lights_Right.set(Value.kForward);
    	}else{
    		lights_Right.set(Value.kOff);
    	}
    }
}

