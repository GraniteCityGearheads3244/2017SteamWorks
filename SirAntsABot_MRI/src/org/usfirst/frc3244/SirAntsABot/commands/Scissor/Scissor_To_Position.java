 // RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3244.SirAntsABot.commands.Scissor;

import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc3244.SirAntsABot.Robot;

/**
 *
 */
public class Scissor_To_Position extends Command {
	
	private double m_setpoint;
    private boolean m_cancel = false;
    
    public Scissor_To_Position(double setpoint) {
    	
    	m_setpoint = setpoint;

        requires(Robot.scissorPID);

    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	m_cancel = false;
    	System.out.println("Scissor_To_Position INIT");
    	// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    	// Not Allow movement if Wrist Is up !
    	// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    	if(m_setpoint>70 && Robot.wristPID.getSetpoint()>30){
    		System.out.println("Scissor Cancled Wrist > 30");
    		m_cancel = true;
    		
    	}else{
    		if(m_setpoint>30 && Robot.wristPID.getSetpoint()>55){
    			System.out.println("Scissor Cancled Wrist > 55");
    			m_cancel = true;
    			
        	}else{
        		Robot.scissorPID.enable();
        		Robot.scissorPID.setSetpoint(m_setpoint);
        	}
    	}      
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
       
        //return Robot.scissorPID.onTarget();
        return Robot.scissorPID.onTarget() || m_cancel;
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.scissorPID.disable();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	 Robot.scissorPID.setSetpoint(Robot.scissorPID.getPosition());
    	 end();
    }
}
